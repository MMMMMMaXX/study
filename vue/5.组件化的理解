1.  组件是独立和可复用的代码组织单元。组件系统是Vue核心特性之一，它使开发者使用小型、独立和通常可复用的组件构建大型应用;
2.  组件化开发能大幅提高应用开发效率、测试性、复用性等;
3.  组件使用按分类有:页面组件、业务组件、通用组件;
4.  vue的组件是基于配置的，我们通常编写的组件是组件配置而非组件，框架后续会生成其构造函数，它们基于vueComponent，扩展于Vue;
5.  vue中常见组件化技术有:属性prop，自定义事件，插槽等,它们主要用于组件通信、扩展等;
6.  合理的划分组件，有助于提升应用性能;
7.  组件应该是高内聚、低耦合的;
8.  遵循单向数据流的原则。
<template>
  <div></div>
</template>

<script>
export default {
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ data @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  data() {
    return {
    };
  },
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ computed @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  computed: {},
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ methods @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  methods: {},
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ created @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  created() {},
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ mounted @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  mounted() {}
};
</script>

<style scoped>
</style>